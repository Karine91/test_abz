/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

@font-face {
  font-family: "ProximaNova-Regular";
  src: url("../fonts/ProximaNova-Regular.eot");
  src: url("../fonts/ProximaNova-Regular.eot?#iefix") format("embedded-opentype"), url("../fonts/ProximaNova-Regular.woff") format("woff"), url("../fonts/ProximaNova-Regular.ttf") format("truetype"), url("../fonts/ProximaNova-Regular.svg#ProximaNova-Regular") format("svg");
  font-style: normal;
  font-weight: normal; }

@font-face {
  font-family: "ProximaNova-Light";
  src: url("../fonts/ProximaNova-Light.eot");
  src: url("../fonts/ProximaNova-Light.eot?#iefix") format("embedded-opentype"), url("../fonts/ProximaNova-Light.woff") format("woff"), url("../fonts/ProximaNova-Light.ttf") format("truetype"), url("../fonts/ProximaNova-Light.svg#ProximaNova-Light") format("svg");
  font-style: normal;
  font-weight: normal; }

html {
  font-size: 62.5%; }

* {
  box-sizing: border-box; }

body {
  font-family: 'ProximaNova-Regular', sans-serif;
  font-size: 1.6rem;
  color: #7c8695;
  line-height: 1.6; }

button {
  cursor: pointer; }

button:disabled {
  cursor: default; }

.is-active {
  font-weight: bold; }

a {
  text-decoration: none; }

.text-one-line, .info-item__title {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis; }

.container {
  min-width: 970px;
  max-width: 1440px;
  padding: 0 1.5rem;
  margin: 0 auto; }
  .container--fluid {
    width: 100%;
    min-width: auto;
    max-width: none;
    padding: 1.5rem 1.3rem 1.5rem 1.4rem; }
  .container--tb-padding {
    padding-top: 1.5rem;
    padding-bottom: 1.5rem; }
  .container--bordered {
    border: 1px solid #e0e2e6;
    border-radius: 4px; }
  .container--no-margin {
    margin: 0; }
  .container--no-padding {
    padding: 0; }

.row {
  display: flex;
  flex-wrap: wrap;
  margin-left: -1.5rem;
  margin-right: -1.5rem; }
  .row--centered {
    align-items: center; }
  .row--column {
    flex-direction: column; }
  .row__col {
    padding: 0 1.5rem; }
  .row__col--2 {
    width: 16.666%; }
  .row__col--3 {
    width: 25%; }
  .row__col--6 {
    width: 50%; }
  .row__col--7 {
    width: 58.333%; }
  .row__col--width-fixed {
    max-width: 243px; }
  .row__col--width-fluid {
    flex-grow: 1; }
  .row__col--no-padding {
    padding: 0; }

.header {
  background: #87b448;
  padding: 0.9rem 0;
  border-bottom: 2px solid #71973c; }
  .header__middle-block {
    display: flex;
    align-items: center; }
    .header__middle-block > div + div {
      margin-left: 30px; }

.logo {
  width: 130px;
  display: inline-block; }
  .logo__image {
    width: 100%;
    position: relative;
    top: 2px; }

.search {
  position: relative;
  flex-grow: 1;
  display: inline-flex; }
  .search .icon {
    display: inline-block;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 10px;
    margin: auto; }
  .search__input {
    border-radius: 2px;
    border: none;
    width: 100%;
    background-color: rgba(0, 0, 0, 0.15);
    padding: 5px 10px 5px 36px;
    font-size: 1.5rem;
    color: white;
    line-height: 1.6; }
    .search__input::-webkit-input-placeholder {
      color: rgba(255, 255, 255, 0.5); }
    .search__input:-moz-placeholder {
      color: rgba(255, 255, 255, 0.5); }
    .search__input::-moz-placeholder {
      color: rgba(255, 255, 255, 0.5); }
    .search__input:-ms-input-placeholder {
      color: rgba(255, 255, 255, 0.5); }

.icon {
  background-image: url("/images/sprites/sprite.png"); }

.icon--ask {
  background-position: 0px 0px;
  width: 24px;
  height: 24px; }

.icon--chat {
  background-position: 0px -24px;
  width: 26px;
  height: 22px; }

.icon--companies {
  background-position: 0px -46px;
  width: 21px;
  height: 24px; }

.icon--feed {
  background-position: -48px 0px;
  width: 24px;
  height: 23px; }

.icon--notifications {
  background-position: -24px 0px;
  width: 24px;
  height: 24px; }

.icon--search {
  background-position: -48px -23px;
  width: 16px;
  height: 16px; }

.icon--services {
  background-position: -21px -46px;
  width: 19px;
  height: 24px; }

.icons-group {
  display: inline-flex;
  align-items: center; }
  .icons-group .icon {
    position: relative;
    top: 2px; }
    .icons-group .icon--notifications {
      left: -2px;
      top: 1px; }
  .icons-group .icon + .icon {
    margin-left: 23px; }

.user-info {
  display: flex;
  align-items: center; }
  .user-info__pic-holder {
    border-radius: 4px;
    overflow: hidden;
    margin-right: 10px;
    flex-shrink: 0;
    width: 32px;
    height: 32px; }
  .user-info__image {
    display: block;
    width: 100%; }
  .user-info__name {
    color: white;
    font-size: 1.6rem;
    word-break: break-all; }

.sidebar {
  list-style: none;
  margin: 0;
  padding: 0; }
  .sidebar__item {
    border-bottom: 1px solid #e0e2e6; }
  .sidebar__link {
    display: flex;
    align-items: center;
    min-height: 50px;
    padding: 10px 0;
    transition: background .3s ease;
    word-break: break-all; }
    .sidebar__link:hover {
      background: #f4f7fb; }
  .sidebar__icon {
    width: 25px;
    display: flex;
    justify-content: center;
    margin-right: 2.5rem; }
    .sidebar__icon .icon {
      display: block; }
  .sidebar__title {
    color: #59606b; }

.advertisement__sign {
  color: #d3d3d3;
  font-size: 1.1rem;
  line-height: 1.2; }

.advertisement__image {
  display: block;
  margin-bottom: 5px; }

.block-title {
  font-size: 1.4rem;
  color: #7c8695;
  font-weight: 400;
  margin: 20px 0 18px;
  line-height: 0.9; }

.info-wrapper > * + * {
  margin-top: 20px;
  border-top: 1px solid #e0e2e6; }

.info__header {
  display: flex;
  justify-content: space-between;
  align-items: center; }

.info__more {
  font-size: 1.4rem;
  color: #1c2534;
  flex-shrink: 0; }
  .info__more:hover {
    text-decoration: underline; }

.info-item__inner {
  display: flex; }

.info-item__content-wrapper {
  padding: 0 0.9rem;
  width: calc(100% - 80px); }

.info-item__content {
  max-height: calc(100% - 12px); }

.info-item__picholder {
  border-radius: 4px;
  overflow: hidden;
  width: 80px;
  height: 80px;
  flex-shrink: 0; }

.info-item__image {
  height: 100%;
  display: block; }

.info-item__title {
  color: #1c2534;
  margin: -0.2rem 0 0.7rem 0;
  font-weight: 400;
  font-size: 1.6rem;
  line-height: 1; }
  .info-item__title--small-b-margin {
    margin-bottom: 0.2rem; }

.info-item__text {
  color: #7c8695;
  font-size: 1.4rem;
  margin: 0 0 0.5rem 0;
  line-height: 1.2;
  width: 100%;
  word-break: break-all; }
  .info-item__text:only-child {
    margin: 0;
    line-height: 1.2;
    max-height: 80px;
    overflow: hidden; }

.info-item__action {
  color: #1c2534;
  font-size: 1.2rem;
  line-height: 1;
  display: block;
  height: 1.2rem;
  letter-spacing: -0.4px; }
  .info-item__action:hover {
    text-decoration: underline; }

.info-item + .info-item {
  margin-top: 20px; }

.footer__copyright, .footer__link {
  margin: 1.6rem 0;
  color: #b7bfcd;
  font-size: 1.2rem;
  line-height: 1; }

.footer__nav {
  display: flex; }

.footer__link {
  display: block;
  margin: 0; }
  .footer__link:hover {
    text-decoration: underline; }

.footer__link + .footer__link {
  margin-left: 20px; }

.section-header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  padding: 1.3rem 0 1.8rem;
  margin: 0 3px 0 -3px; }
  .section-header__title {
    color: #1c2534;
    font-size: 3rem;
    font-weight: 400;
    margin: 0;
    line-height: 1; }

.button {
  background: #87b448;
  border: none;
  color: white;
  font-size: 1.4rem;
  padding: 0.7rem 1.9rem;
  border-radius: 6px;
  transition: background 0.3s ease; }
  .button:hover {
    background: #6c9039; }

.services {
  margin: 0;
  padding: 0;
  list-style: none;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around; }
  .services__item {
    width: 140px;
    flex-shrink: 0;
    margin-right: 1.4rem;
    margin-bottom: 1.3rem; }
    .services__item:nth-child(3n + 3) {
      margin-right: 0; }
    .services__item:nth-child(3n + 3):nth-last-child(-n + 3) ~ .services__item {
      margin-bottom: 0; }
      .services__item:nth-child(3n + 3):nth-last-child(-n + 3) ~ .services__item:last-child {
        margin-right: 0; }
    @media (min-width: 1146px) {
      .services__item:nth-child(n) {
        margin-right: 1.8rem; }
      .services__item:nth-child(4n + 4) {
        margin-right: 0; }
      .services__item:nth-child(4n + 4):nth-last-child(-n + 4) ~ .services__item {
        margin-bottom: 0; } }
    @media (min-width: 1304px) {
      .services__item:nth-child(n) {
        margin-right: 1.8rem; }
      .services__item:nth-child(5n + 5) {
        margin-right: 0; }
      .services__item:nth-child(5n + 5):nth-last-child(-n + 5) ~ .services__item {
        margin-bottom: 0; } }
  .services__icon-wrapper {
    width: 100%;
    height: 140px;
    border: 1px solid #e0e2e6;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 1.8rem;
    background: white;
    transition: background 0.3s ease; }
  .services__item:hover .services__icon-wrapper {
    background: #f4f7fb; }
  .services__icon {
    max-width: 100%; }
  .services__title {
    line-height: 1.2;
    text-align: center;
    font-size: 1.36rem;
    color: #1c2534;
    padding: 0 1.5rem;
    transition: color 0.3s ease; }
  .services__item:hover .services__title {
    color: #87b448; }

.ReactModalPortal > div {
  opacity: 0; }

.ReactModalPortal .ReactModal__Overlay {
  align-items: center;
  display: flex;
  justify-content: center;
  transition: opacity 200ms ease-in-out; }

.ReactModalPortal .ReactModal__Overlay--after-open {
  opacity: 1; }

.ReactModalPortal .ReactModal__Overlay--before-close {
  opacity: 0; }

.modal {
  background: white;
  color: #7c8695;
  max-width: 35rem;
  outline: none;
  padding: 2.5rem;
  text-align: center;
  border: 1px solid #e0e2e6;
  border-radius: 4px; }

.modal__title {
  margin: 0 0 2.5rem 0; }

.modal__body {
  font-size: 2rem;
  font-weight: 300;
  margin: 0 0 2.5rem 0;
  word-break: break-all; }

.large-hero {
  background-image: url("/images/contact-bg-header.jpg");
  background-size: cover;
  height: 510px;
  position: relative; }
  .large-hero__text-content {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background: rgba(28, 37, 52, 0.9); }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL25vZGVfbW9kdWxlcy9ub3JtYWxpemUuY3NzL25vcm1hbGl6ZS5jc3MiLCJzdHlsZXMuY3NzIiwiYmFzZS9fbWl4aW5zLnNjc3MiLCJiYXNlL19iYXNlLnNjc3MiLCJiYXNlL19zZXR0aW5ncy5zY3NzIiwiY29tcG9uZW50cy9fY29udGFpbmVyLnNjc3MiLCJjb21wb25lbnRzL19yb3cuc2NzcyIsImNvbXBvbmVudHMvX2hlYWRlci5zY3NzIiwiY29tcG9uZW50cy9fbG9nby5zY3NzIiwiY29tcG9uZW50cy9fc2VhcmNoLnNjc3MiLCJjb21wb25lbnRzL19zcHJpdGUuc2NzcyIsImNvbXBvbmVudHMvX2ljb25zLWdyb3VwLnNjc3MiLCJjb21wb25lbnRzL191c2VyLWluZm8uc2NzcyIsImNvbXBvbmVudHMvX3NpZGViYXIuc2NzcyIsImNvbXBvbmVudHMvX2FkdmVydGlzZW1lbnQuc2NzcyIsImNvbXBvbmVudHMvX2Jsb2NrLXRpdGxlLnNjc3MiLCJjb21wb25lbnRzL19pbmZvLXdyYXBwZXIuc2NzcyIsImNvbXBvbmVudHMvX2luZm8uc2NzcyIsImNvbXBvbmVudHMvX2Zvb3Rlci5zY3NzIiwiY29tcG9uZW50cy9fc2VjdGlvbi1oZWFkZXIuc2NzcyIsImNvbXBvbmVudHMvX2J1dHRvbi5zY3NzIiwiY29tcG9uZW50cy9fc2VydmljZXMuc2NzcyIsImNvbXBvbmVudHMvX21vZGFsLnNjc3MiLCJjb21wb25lbnRzL19sYXJnZS1oZXJvLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNEVBQTRFO0FBRTVFO2dGQUNnRjtBQUVoRjs7O0dBR0c7QUFFSDtFQUNFLGtCQUFpQjtFQUFFLE9BQU87RUFDMUIsK0JBQThCO0VBQUUsT0FBTyxFQUN4Qzs7QUFFRDtnRkFDZ0Y7QUFFaEY7O0dBRUc7QUFFSDtFQUNFLFVBQVMsRUFDVjs7QUFFRDs7O0dBR0c7QUFFSDtFQUNFLGVBQWM7RUFDZCxpQkFBZ0IsRUFDakI7O0FBRUQ7Z0ZBQ2dGO0FB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O0VBUkc7SUFDSSxtQkFBa0I7SUFDbEIsT0FBTTtJQUNOLFVBQVM7SUFDVCxRQUFPO0lBQ1AsU0FBUTtJQUNSLGtDbkJMVyxFbUJNZCIsImZpbGUiOiJzdHlsZXMuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyohIG5vcm1hbGl6ZS5jc3MgdjguMC4wIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuXG4vKiBEb2N1bWVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cbiAqL1xuXG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xuICBoZWlnaHQ6IDA7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0OyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTsgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICBtYXJnaW46IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQgeyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7IC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5bdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cbiAqL1xuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLlxuICovXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxuICovXG5cbmRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xufVxuXG4vKiBNaXNjXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cbiAqL1xuXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXG4gKi9cblxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuIiwiLyohIG5vcm1hbGl6ZS5jc3MgdjguMC4wIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxuICovXG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovIH1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cbiAqL1xuYm9keSB7XG4gIG1hcmdpbjogMDsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7IH1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAvKiAxICovXG4gIGhlaWdodDogMDtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovIH1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB9XG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny1cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTsgfVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICBtYXJnaW46IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQge1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5bdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0OyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAvKiAxICovIH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxuICovXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXG4gKi9cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi8gfVxuXG4vKiBJbnRlcmFjdGl2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxuICovXG5kZXRhaWxzIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTsgfVxuXG4vKiBNaXNjXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMCsuXG4gKi9cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxuICovXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIlByb3hpbWFOb3ZhLVJlZ3VsYXJcIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9Qcm94aW1hTm92YS1SZWd1bGFyLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9Qcm94aW1hTm92YS1SZWd1bGFyLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi4uL2ZvbnRzL1Byb3hpbWFOb3ZhLVJlZ3VsYXIud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250cy9Qcm94aW1hTm92YS1SZWd1bGFyLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiLi4vZm9udHMvUHJveGltYU5vdmEtUmVndWxhci5zdmcjUHJveGltYU5vdmEtUmVndWxhclwiKSBmb3JtYXQoXCJzdmdcIik7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiUHJveGltYU5vdmEtTGlnaHRcIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9Qcm94aW1hTm92YS1MaWdodC5lb3RcIik7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvUHJveGltYU5vdmEtTGlnaHQuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiLi4vZm9udHMvUHJveGltYU5vdmEtTGlnaHQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250cy9Qcm94aW1hTm92YS1MaWdodC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIiksIHVybChcIi4uL2ZvbnRzL1Byb3hpbWFOb3ZhLUxpZ2h0LnN2ZyNQcm94aW1hTm92YS1MaWdodFwiKSBmb3JtYXQoXCJzdmdcIik7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDsgfVxuXG5odG1sIHtcbiAgZm9udC1zaXplOiA2Mi41JTsgfVxuXG4qIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG5ib2R5IHtcbiAgZm9udC1mYW1pbHk6ICdQcm94aW1hTm92YS1SZWd1bGFyJywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxLjZyZW07XG4gIGNvbG9yOiAjN2M4Njk1O1xuICBsaW5lLWhlaWdodDogMS42OyB9XG5cbmJ1dHRvbiB7XG4gIGN1cnNvcjogcG9pbnRlcjsgfVxuXG5idXR0b246ZGlzYWJsZWQge1xuICBjdXJzb3I6IGRlZmF1bHQ7IH1cblxuLmlzLWFjdGl2ZSB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuLnRleHQtb25lLWxpbmUsIC5pbmZvLWl0ZW1fX3RpdGxlIHtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7IH1cblxuLmNvbnRhaW5lciB7XG4gIG1pbi13aWR0aDogOTcwcHg7XG4gIG1heC13aWR0aDogMTQ0MHB4O1xuICBwYWRkaW5nOiAwIDEuNXJlbTtcbiAgbWFyZ2luOiAwIGF1dG87IH1cbiAgLmNvbnRhaW5lci0tZmx1aWQge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1pbi13aWR0aDogYXV0bztcbiAgICBtYXgtd2lkdGg6IG5vbmU7XG4gICAgcGFkZGluZzogMS41cmVtIDEuM3JlbSAxLjVyZW0gMS40cmVtOyB9XG4gIC5jb250YWluZXItLXRiLXBhZGRpbmcge1xuICAgIHBhZGRpbmctdG9wOiAxLjVyZW07XG4gICAgcGFkZGluZy1ib3R0b206IDEuNXJlbTsgfVxuICAuY29udGFpbmVyLS1ib3JkZXJlZCB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2UwZTJlNjtcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7IH1cbiAgLmNvbnRhaW5lci0tbm8tbWFyZ2luIHtcbiAgICBtYXJnaW46IDA7IH1cbiAgLmNvbnRhaW5lci0tbm8tcGFkZGluZyB7XG4gICAgcGFkZGluZzogMDsgfVxuXG4ucm93IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBtYXJnaW4tbGVmdDogLTEuNXJlbTtcbiAgbWFyZ2luLXJpZ2h0OiAtMS41cmVtOyB9XG4gIC5yb3ctLWNlbnRlcmVkIHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIC5yb3ctLWNvbHVtbiB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxuICAucm93X19jb2wge1xuICAgIHBhZGRpbmc6IDAgMS41cmVtOyB9XG4gIC5yb3dfX2NvbC0tMiB7XG4gICAgd2lkdGg6IDE2LjY2NiU7IH1cbiAgLnJvd19fY29sLS0zIHtcbiAgICB3aWR0aDogMjUlOyB9XG4gIC5yb3dfX2NvbC0tNiB7XG4gICAgd2lkdGg6IDUwJTsgfVxuICAucm93X19jb2wtLTcge1xuICAgIHdpZHRoOiA1OC4zMzMlOyB9XG4gIC5yb3dfX2NvbC0td2lkdGgtZml4ZWQge1xuICAgIG1heC13aWR0aDogMjQzcHg7IH1cbiAgLnJvd19fY29sLS13aWR0aC1mbHVpZCB7XG4gICAgZmxleC1ncm93OiAxOyB9XG4gIC5yb3dfX2NvbC0tbm8tcGFkZGluZyB7XG4gICAgcGFkZGluZzogMDsgfVxuXG4uaGVhZGVyIHtcbiAgYmFja2dyb3VuZDogIzg3YjQ0ODtcbiAgcGFkZGluZzogMC45cmVtIDA7XG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjNzE5NzNjOyB9XG4gIC5oZWFkZXJfX21pZGRsZS1ibG9jayB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gICAgLmhlYWRlcl9fbWlkZGxlLWJsb2NrID4gZGl2ICsgZGl2IHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAzMHB4OyB9XG5cbi5sb2dvIHtcbiAgd2lkdGg6IDEzMHB4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cbiAgLmxvZ29fX2ltYWdlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiAycHg7IH1cblxuLnNlYXJjaCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZmxleC1ncm93OiAxO1xuICBkaXNwbGF5OiBpbmxpbmUtZmxleDsgfVxuICAuc2VhcmNoIC5pY29uIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBib3R0b206IDA7XG4gICAgbGVmdDogMTBweDtcbiAgICBtYXJnaW46IGF1dG87IH1cbiAgLnNlYXJjaF9faW5wdXQge1xuICAgIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjE1KTtcbiAgICBwYWRkaW5nOiA1cHggMTBweCA1cHggMzZweDtcbiAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgbGluZS1oZWlnaHQ6IDEuNjsgfVxuICAgIC5zZWFyY2hfX2lucHV0Ojotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7IH1cbiAgICAuc2VhcmNoX19pbnB1dDotbW96LXBsYWNlaG9sZGVyIHtcbiAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7IH1cbiAgICAuc2VhcmNoX19pbnB1dDo6LW1vei1wbGFjZWhvbGRlciB7XG4gICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpOyB9XG4gICAgLnNlYXJjaF9faW5wdXQ6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7IH1cblxuLmljb24ge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL3Nwcml0ZXMvc3ByaXRlLnBuZ1wiKTsgfVxuXG4uaWNvbi0tYXNrIHtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMHB4IDBweDtcbiAgd2lkdGg6IDI0cHg7XG4gIGhlaWdodDogMjRweDsgfVxuXG4uaWNvbi0tY2hhdCB7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDBweCAtMjRweDtcbiAgd2lkdGg6IDI2cHg7XG4gIGhlaWdodDogMjJweDsgfVxuXG4uaWNvbi0tY29tcGFuaWVzIHtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMHB4IC00NnB4O1xuICB3aWR0aDogMjFweDtcbiAgaGVpZ2h0OiAyNHB4OyB9XG5cbi5pY29uLS1mZWVkIHtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTQ4cHggMHB4O1xuICB3aWR0aDogMjRweDtcbiAgaGVpZ2h0OiAyM3B4OyB9XG5cbi5pY29uLS1ub3RpZmljYXRpb25zIHtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTI0cHggMHB4O1xuICB3aWR0aDogMjRweDtcbiAgaGVpZ2h0OiAyNHB4OyB9XG5cbi5pY29uLS1zZWFyY2gge1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNDhweCAtMjNweDtcbiAgd2lkdGg6IDE2cHg7XG4gIGhlaWdodDogMTZweDsgfVxuXG4uaWNvbi0tc2VydmljZXMge1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMjFweCAtNDZweDtcbiAgd2lkdGg6IDE5cHg7XG4gIGhlaWdodDogMjRweDsgfVxuXG4uaWNvbnMtZ3JvdXAge1xuICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAuaWNvbnMtZ3JvdXAgLmljb24ge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0b3A6IDJweDsgfVxuICAgIC5pY29ucy1ncm91cCAuaWNvbi0tbm90aWZpY2F0aW9ucyB7XG4gICAgICBsZWZ0OiAtMnB4O1xuICAgICAgdG9wOiAxcHg7IH1cbiAgLmljb25zLWdyb3VwIC5pY29uICsgLmljb24ge1xuICAgIG1hcmdpbi1sZWZ0OiAyM3B4OyB9XG5cbi51c2VyLWluZm8ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIC51c2VyLWluZm9fX3BpYy1ob2xkZXIge1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgICBmbGV4LXNocmluazogMDtcbiAgICB3aWR0aDogMzJweDtcbiAgICBoZWlnaHQ6IDMycHg7IH1cbiAgLnVzZXItaW5mb19faW1hZ2Uge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC51c2VyLWluZm9fX25hbWUge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBmb250LXNpemU6IDEuNnJlbTtcbiAgICB3b3JkLWJyZWFrOiBicmVhay1hbGw7IH1cblxuLnNpZGViYXIge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7IH1cbiAgLnNpZGViYXJfX2l0ZW0ge1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTBlMmU2OyB9XG4gIC5zaWRlYmFyX19saW5rIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgbWluLWhlaWdodDogNTBweDtcbiAgICBwYWRkaW5nOiAxMHB4IDA7XG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAuM3MgZWFzZTtcbiAgICB3b3JkLWJyZWFrOiBicmVhay1hbGw7IH1cbiAgICAuc2lkZWJhcl9fbGluazpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kOiAjZjRmN2ZiOyB9XG4gIC5zaWRlYmFyX19pY29uIHtcbiAgICB3aWR0aDogMjVweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIG1hcmdpbi1yaWdodDogMi41cmVtOyB9XG4gICAgLnNpZGViYXJfX2ljb24gLmljb24ge1xuICAgICAgZGlzcGxheTogYmxvY2s7IH1cbiAgLnNpZGViYXJfX3RpdGxlIHtcbiAgICBjb2xvcjogIzU5NjA2YjsgfVxuXG4uYWR2ZXJ0aXNlbWVudF9fc2lnbiB7XG4gIGNvbG9yOiAjZDNkM2QzO1xuICBmb250LXNpemU6IDEuMXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMjsgfVxuXG4uYWR2ZXJ0aXNlbWVudF9faW1hZ2Uge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLWJvdHRvbTogNXB4OyB9XG5cbi5ibG9jay10aXRsZSB7XG4gIGZvbnQtc2l6ZTogMS40cmVtO1xuICBjb2xvcjogIzdjODY5NTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbWFyZ2luOiAyMHB4IDAgMThweDtcbiAgbGluZS1oZWlnaHQ6IDAuOTsgfVxuXG4uaW5mby13cmFwcGVyID4gKiArICoge1xuICBtYXJnaW4tdG9wOiAyMHB4O1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2UwZTJlNjsgfVxuXG4uaW5mb19faGVhZGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG5cbi5pbmZvX19tb3JlIHtcbiAgZm9udC1zaXplOiAxLjRyZW07XG4gIGNvbG9yOiAjMWMyNTM0O1xuICBmbGV4LXNocmluazogMDsgfVxuICAuaW5mb19fbW9yZTpob3ZlciB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IH1cblxuLmluZm8taXRlbV9faW5uZXIge1xuICBkaXNwbGF5OiBmbGV4OyB9XG5cbi5pbmZvLWl0ZW1fX2NvbnRlbnQtd3JhcHBlciB7XG4gIHBhZGRpbmc6IDAgMC45cmVtO1xuICB3aWR0aDogY2FsYygxMDAlIC0gODBweCk7IH1cblxuLmluZm8taXRlbV9fY29udGVudCB7XG4gIG1heC1oZWlnaHQ6IGNhbGMoMTAwJSAtIDEycHgpOyB9XG5cbi5pbmZvLWl0ZW1fX3BpY2hvbGRlciB7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgd2lkdGg6IDgwcHg7XG4gIGhlaWdodDogODBweDtcbiAgZmxleC1zaHJpbms6IDA7IH1cblxuLmluZm8taXRlbV9faW1hZ2Uge1xuICBoZWlnaHQ6IDEwMCU7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi5pbmZvLWl0ZW1fX3RpdGxlIHtcbiAgY29sb3I6ICMxYzI1MzQ7XG4gIG1hcmdpbjogLTAuMnJlbSAwIDAuN3JlbSAwO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDEuNnJlbTtcbiAgbGluZS1oZWlnaHQ6IDE7IH1cbiAgLmluZm8taXRlbV9fdGl0bGUtLXNtYWxsLWItbWFyZ2luIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjJyZW07IH1cblxuLmluZm8taXRlbV9fdGV4dCB7XG4gIGNvbG9yOiAjN2M4Njk1O1xuICBmb250LXNpemU6IDEuNHJlbTtcbiAgbWFyZ2luOiAwIDAgMC41cmVtIDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjI7XG4gIHdpZHRoOiAxMDAlO1xuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7IH1cbiAgLmluZm8taXRlbV9fdGV4dDpvbmx5LWNoaWxkIHtcbiAgICBtYXJnaW46IDA7XG4gICAgbGluZS1oZWlnaHQ6IDEuMjtcbiAgICBtYXgtaGVpZ2h0OiA4MHB4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47IH1cblxuLmluZm8taXRlbV9fYWN0aW9uIHtcbiAgY29sb3I6ICMxYzI1MzQ7XG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xuICBsaW5lLWhlaWdodDogMTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogMS4ycmVtO1xuICBsZXR0ZXItc3BhY2luZzogLTAuNHB4OyB9XG4gIC5pbmZvLWl0ZW1fX2FjdGlvbjpob3ZlciB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IH1cblxuLmluZm8taXRlbSArIC5pbmZvLWl0ZW0ge1xuICBtYXJnaW4tdG9wOiAyMHB4OyB9XG5cbi5mb290ZXJfX2NvcHlyaWdodCwgLmZvb3Rlcl9fbGluayB7XG4gIG1hcmdpbjogMS42cmVtIDA7XG4gIGNvbG9yOiAjYjdiZmNkO1xuICBmb250LXNpemU6IDEuMnJlbTtcbiAgbGluZS1oZWlnaHQ6IDE7IH1cblxuLmZvb3Rlcl9fbmF2IHtcbiAgZGlzcGxheTogZmxleDsgfVxuXG4uZm9vdGVyX19saW5rIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMDsgfVxuICAuZm9vdGVyX19saW5rOmhvdmVyIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxuXG4uZm9vdGVyX19saW5rICsgLmZvb3Rlcl9fbGluayB7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4OyB9XG5cbi5zZWN0aW9uLWhlYWRlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIHBhZGRpbmc6IDEuM3JlbSAwIDEuOHJlbTtcbiAgbWFyZ2luOiAwIDNweCAwIC0zcHg7IH1cbiAgLnNlY3Rpb24taGVhZGVyX190aXRsZSB7XG4gICAgY29sb3I6ICMxYzI1MzQ7XG4gICAgZm9udC1zaXplOiAzcmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgbWFyZ2luOiAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxOyB9XG5cbi5idXR0b24ge1xuICBiYWNrZ3JvdW5kOiAjODdiNDQ4O1xuICBib3JkZXI6IG5vbmU7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZm9udC1zaXplOiAxLjRyZW07XG4gIHBhZGRpbmc6IDAuN3JlbSAxLjlyZW07XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIGVhc2U7IH1cbiAgLmJ1dHRvbjpob3ZlciB7XG4gICAgYmFja2dyb3VuZDogIzZjOTAzOTsgfVxuXG4uc2VydmljZXMge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7IH1cbiAgLnNlcnZpY2VzX19pdGVtIHtcbiAgICB3aWR0aDogMTQwcHg7XG4gICAgZmxleC1zaHJpbms6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAxLjRyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMS4zcmVtOyB9XG4gICAgLnNlcnZpY2VzX19pdGVtOm50aC1jaGlsZCgzbiArIDMpIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMDsgfVxuICAgIC5zZXJ2aWNlc19faXRlbTpudGgtY2hpbGQoM24gKyAzKTpudGgtbGFzdC1jaGlsZCgtbiArIDMpIH4gLnNlcnZpY2VzX19pdGVtIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7IH1cbiAgICAgIC5zZXJ2aWNlc19faXRlbTpudGgtY2hpbGQoM24gKyAzKTpudGgtbGFzdC1jaGlsZCgtbiArIDMpIH4gLnNlcnZpY2VzX19pdGVtOmxhc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTE0NnB4KSB7XG4gICAgICAuc2VydmljZXNfX2l0ZW06bnRoLWNoaWxkKG4pIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxLjhyZW07IH1cbiAgICAgIC5zZXJ2aWNlc19faXRlbTpudGgtY2hpbGQoNG4gKyA0KSB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMDsgfVxuICAgICAgLnNlcnZpY2VzX19pdGVtOm50aC1jaGlsZCg0biArIDQpOm50aC1sYXN0LWNoaWxkKC1uICsgNCkgfiAuc2VydmljZXNfX2l0ZW0ge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwOyB9IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTMwNHB4KSB7XG4gICAgICAuc2VydmljZXNfX2l0ZW06bnRoLWNoaWxkKG4pIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxLjhyZW07IH1cbiAgICAgIC5zZXJ2aWNlc19faXRlbTpudGgtY2hpbGQoNW4gKyA1KSB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMDsgfVxuICAgICAgLnNlcnZpY2VzX19pdGVtOm50aC1jaGlsZCg1biArIDUpOm50aC1sYXN0LWNoaWxkKC1uICsgNSkgfiAuc2VydmljZXNfX2l0ZW0ge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwOyB9IH1cbiAgLnNlcnZpY2VzX19pY29uLXdyYXBwZXIge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTQwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2UwZTJlNjtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgbWFyZ2luLWJvdHRvbTogMS44cmVtO1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC4zcyBlYXNlOyB9XG4gIC5zZXJ2aWNlc19faXRlbTpob3ZlciAuc2VydmljZXNfX2ljb24td3JhcHBlciB7XG4gICAgYmFja2dyb3VuZDogI2Y0ZjdmYjsgfVxuICAuc2VydmljZXNfX2ljb24ge1xuICAgIG1heC13aWR0aDogMTAwJTsgfVxuICAuc2VydmljZXNfX3RpdGxlIHtcbiAgICBsaW5lLWhlaWdodDogMS4yO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LXNpemU6IDEuMzZyZW07XG4gICAgY29sb3I6ICMxYzI1MzQ7XG4gICAgcGFkZGluZzogMCAxLjVyZW07XG4gICAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBlYXNlOyB9XG4gIC5zZXJ2aWNlc19faXRlbTpob3ZlciAuc2VydmljZXNfX3RpdGxlIHtcbiAgICBjb2xvcjogIzg3YjQ0ODsgfVxuXG4uUmVhY3RNb2RhbFBvcnRhbCA+IGRpdiB7XG4gIG9wYWNpdHk6IDA7IH1cblxuLlJlYWN0TW9kYWxQb3J0YWwgLlJlYWN0TW9kYWxfX092ZXJsYXkge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAyMDBtcyBlYXNlLWluLW91dDsgfVxuXG4uUmVhY3RNb2RhbFBvcnRhbCAuUmVhY3RNb2RhbF9fT3ZlcmxheS0tYWZ0ZXItb3BlbiB7XG4gIG9wYWNpdHk6IDE7IH1cblxuLlJlYWN0TW9kYWxQb3J0YWwgLlJlYWN0TW9kYWxfX092ZXJsYXktLWJlZm9yZS1jbG9zZSB7XG4gIG9wYWNpdHk6IDA7IH1cblxuLm1vZGFsIHtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIGNvbG9yOiAjN2M4Njk1O1xuICBtYXgtd2lkdGg6IDM1cmVtO1xuICBvdXRsaW5lOiBub25lO1xuICBwYWRkaW5nOiAyLjVyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYm9yZGVyOiAxcHggc29saWQgI2UwZTJlNjtcbiAgYm9yZGVyLXJhZGl1czogNHB4OyB9XG5cbi5tb2RhbF9fdGl0bGUge1xuICBtYXJnaW46IDAgMCAyLjVyZW0gMDsgfVxuXG4ubW9kYWxfX2JvZHkge1xuICBmb250LXNpemU6IDJyZW07XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIG1hcmdpbjogMCAwIDIuNXJlbSAwO1xuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7IH1cblxuLmxhcmdlLWhlcm8ge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaW1hZ2VzL2NvbnRhY3QtYmctaGVhZGVyLmpwZ1wiKTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgaGVpZ2h0OiA1MTBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5sYXJnZS1oZXJvX190ZXh0LWNvbnRlbnQge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgYmFja2dyb3VuZDogcmdiYSgyOCwgMzcsIDUyLCAwLjkpOyB9XG4iLCJAbWl4aW4gYXRMYXJnZSB7XHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTQ0MHB4KSB7XHJcbiAgICAgICAgQGNvbnRlbnQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtaXhpbiBhdFdpZHRoKCR3aWR0aCkge1xyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICR3aWR0aCkge1xyXG4gICAgICAgIEBjb250ZW50O1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWl4aW4gZm9udEZhY2UoJGZhbWlseSwgJHNyYywgJHN0eWxlOiBub3JtYWwsICR3ZWlnaHQ6IG5vcm1hbCkge1xyXG5cdEBmb250LWZhY2Uge1xyXG5cdFx0Zm9udC1mYW1pbHk6ICRmYW1pbHk7XHJcblx0XHRzcmM6IHVybCgnI3skc3JjfS5lb3QnKTsgLy8gSUU5IGNvbXBhdFxyXG5cdFx0c3JjOiB1cmwoJyN7JHNyY30uZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSwgLy8gSUU4IGFuZCBiZWxvd1xyXG5cdFx0XHR1cmwoJyN7JHNyY30ud29mZicpIGZvcm1hdCgnd29mZicpLCAvLyBzdGFuZGFyZHNcclxuXHRcdFx0dXJsKCcjeyRzcmN9LnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKSwgLy8gU2FmYXJpLCBBbmRyb2lkLCBpT1NcclxuXHRcdFx0dXJsKCcjeyRzcmN9LnN2ZyMjeyRmYW1pbHl9JykgZm9ybWF0KCdzdmcnKTsgLy8gbGVnYWN5IGlPU1xyXG5cclxuXHRcdGZvbnQtc3R5bGU6ICRzdHlsZTtcclxuXHRcdGZvbnQtd2VpZ2h0OiAkd2VpZ2h0O1xyXG5cdH1cclxufVxyXG5cclxuQG1peGluIHBsYWNlaG9sZGVyIHtcclxuICAgICY6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge0Bjb250ZW50fVxyXG4gICAgJjotbW96LXBsYWNlaG9sZGVyICAgICAgICAgICB7QGNvbnRlbnR9XHJcbiAgICAmOjotbW96LXBsYWNlaG9sZGVyICAgICAgICAgIHtAY29udGVudH1cclxuICAgICY6LW1zLWlucHV0LXBsYWNlaG9sZGVyICAgICAge0Bjb250ZW50fSAgXHJcbn0iLCJAaW5jbHVkZSBmb250RmFjZSgnUHJveGltYU5vdmEtUmVndWxhcicsICcuLi9mb250cy9Qcm94aW1hTm92YS1SZWd1bGFyJyk7XHJcbkBpbmNsdWRlIGZvbnRGYWNlKCdQcm94aW1hTm92YS1MaWdodCcsICcuLi9mb250cy9Qcm94aW1hTm92YS1MaWdodCcpO1xyXG5cclxuaHRtbCB7XHJcbiAgICBmb250LXNpemU6IDYyLjUlO1xyXG59XHJcblxyXG4qIHtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuXHJcbmJvZHkge1xyXG4gICAgZm9udC1mYW1pbHk6ICdQcm94aW1hTm92YS1SZWd1bGFyJywgc2Fucy1zZXJpZjtcclxuICAgIGZvbnQtc2l6ZTogJGZvbnQtc2l6ZS1tZWRpdW07XHJcbiAgICBjb2xvcjogJGdyYXk7XHJcbiAgICBsaW5lLWhlaWdodDogMS42O1xyXG59XHJcblxyXG5idXR0b24ge1xyXG4gICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbmJ1dHRvbjpkaXNhYmxlZCB7XHJcbiAgICBjdXJzb3I6IGRlZmF1bHQ7XHJcbn1cclxuXHJcbi5pcy1hY3RpdmUge1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbmEge1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG59XHJcblxyXG4udGV4dC1vbmUtbGluZSB7XHJcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG59XHJcbiIsIi8vQ29sb3JzXHJcbiRncmVlbjogIzg3YjQ0ODtcclxuJGRhcmstZ3JlZW46ICM3MTk3M2M7IFxyXG4kZ3JheTogIzdjODY5NTtcclxuJGxpZ2h0Z3JheTogI2UwZTJlNjtcclxuJHRleHQtZ3JheTogIzU5NjA2YjtcclxuJG9mZi13aGl0ZTogI2Y0ZjdmYjtcclxuJGRhcmstYmx1ZTogIzFjMjUzNDtcclxuXHJcbi8vZm9udCBzaXplc1xyXG4kZm9udC1zaXplLXhsYXJnZTogM3JlbTsgXHJcbiRmb250LXNpemUtbGFyZ2U6IDEuOHJlbTtcclxuJGZvbnQtc2l6ZS1tZWRpdW06IDEuNnJlbTtcclxuJGZvbnQtc2l6ZS1zbWFsbDogMS40cmVtO1xyXG4kZm9udC1zaXplLXhzbWFsbDogMS4ycmVtO1xyXG5cclxuLy9TcGFjaW5nXHJcbiRzLXNpemU6IDEuNXJlbTtcclxuJG0tc2l6ZTogMi41cmVtOyIsIi5jb250YWluZXIge1xyXG4gIG1pbi13aWR0aDogOTcwcHg7XHJcbiAgbWF4LXdpZHRoOiAxNDQwcHg7XHJcbiAgcGFkZGluZzogMCAkcy1zaXplO1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG5cclxuICAmLS1mbHVpZCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1pbi13aWR0aDogYXV0bztcclxuICAgIG1heC13aWR0aDogbm9uZTtcclxuICAgIHBhZGRpbmc6ICRzLXNpemUgMS4zcmVtICRzLXNpemUgMS40cmVtO1xyXG4gIH1cclxuXHJcbiAgJi0tdGItcGFkZGluZyB7XHJcbiAgICBwYWRkaW5nLXRvcDogJHMtc2l6ZTtcclxuICAgIHBhZGRpbmctYm90dG9tOiAkcy1zaXplO1xyXG4gIH1cclxuXHJcbiAgJi0tYm9yZGVyZWQge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgJGxpZ2h0Z3JheTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICB9XHJcblxyXG4gICYtLW5vLW1hcmdpbiB7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgfVxyXG5cclxuICAmLS1uby1wYWRkaW5nIHtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgfVxyXG59XHJcbiIsIi5yb3cge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIG1hcmdpbi1sZWZ0OiAtJHMtc2l6ZTtcclxuICAgIG1hcmdpbi1yaWdodDogLSRzLXNpemU7XHJcblxyXG4gICAgJi0tY2VudGVyZWQge1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICB9XHJcblxyXG4gICAgJi0tY29sdW1uIHtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2NvbCB7XHJcbiAgICAgICAgcGFkZGluZzogMCAkcy1zaXplO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2NvbC0tMiB7XHJcbiAgICAgICAgd2lkdGg6IDE2LjY2NiU7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fY29sLS0zIHtcclxuICAgICAgICB3aWR0aDogMjUlO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2NvbC0tNiB7XHJcbiAgICAgICAgd2lkdGg6IDUwJTtcclxuICAgIH1cclxuXHJcbiAgICAmX19jb2wtLTcge1xyXG4gICAgICAgIHdpZHRoOiA1OC4zMzMlO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2NvbC0td2lkdGgtZml4ZWQge1xyXG4gICAgICAgIG1heC13aWR0aDogMjQzcHg7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fY29sLS13aWR0aC1mbHVpZHtcclxuICAgICAgICBmbGV4LWdyb3c6IDE7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fY29sLS1uby1wYWRkaW5nIHtcclxuICAgICAgICBwYWRkaW5nOiAwO1xyXG4gICAgfVxyXG59IiwiLmhlYWRlciB7XHJcbiAgYmFja2dyb3VuZDogJGdyZWVuO1xyXG4gIHBhZGRpbmc6IDAuOXJlbSAwO1xyXG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAkZGFyay1ncmVlbjtcclxuXHJcbiAgJl9fbWlkZGxlLWJsb2NrIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAgID4gZGl2ICsgZGl2IHtcclxuICAgICAgbWFyZ2luLWxlZnQ6IDMwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsIi5sb2dvIHtcclxuICB3aWR0aDogMTMwcHg7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cclxuICAmX19pbWFnZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRvcDogMnB4O1xyXG4gIH1cclxufVxyXG4iLCIuc2VhcmNoIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgZmxleC1ncm93OiAxO1xyXG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xyXG5cclxuICAuaWNvbiB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBsZWZ0OiAxMHB4O1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gIH1cclxuXHJcbiAgJl9faW5wdXQge1xyXG4gICAgYm9yZGVyLXJhZGl1czogMnB4O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMTUpO1xyXG4gICAgcGFkZGluZzogNXB4IDEwcHggNXB4IDM2cHg7XHJcbiAgICBmb250LXNpemU6ICRzLXNpemU7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBsaW5lLWhlaWdodDogMS42O1xyXG5cclxuICAgIEBpbmNsdWRlIHBsYWNlaG9sZGVyIHtcclxuICAgICAgY29sb3I6IHJnYmEod2hpdGUsIDAuNSk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsIi5pY29uIHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnL2ltYWdlcy9zcHJpdGVzL3Nwcml0ZS5wbmcnKTtcclxufVxyXG5cclxuICAgIC5pY29uLS1hc2sge1xyXG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDBweCAwcHg7XHJcbiAgICAgICAgd2lkdGg6IDI0cHg7XHJcbiAgICAgICAgaGVpZ2h0OiAyNHB4O1xyXG4gICAgfVxyXG4gICAgLmljb24tLWNoYXQge1xyXG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDBweCAtMjRweDtcclxuICAgICAgICB3aWR0aDogMjZweDtcclxuICAgICAgICBoZWlnaHQ6IDIycHg7XHJcbiAgICB9XHJcbiAgICAuaWNvbi0tY29tcGFuaWVzIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwcHggLTQ2cHg7XHJcbiAgICAgICAgd2lkdGg6IDIxcHg7XHJcbiAgICAgICAgaGVpZ2h0OiAyNHB4O1xyXG4gICAgfVxyXG4gICAgLmljb24tLWZlZWQge1xyXG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IC00OHB4IDBweDtcclxuICAgICAgICB3aWR0aDogMjRweDtcclxuICAgICAgICBoZWlnaHQ6IDIzcHg7XHJcbiAgICB9XHJcbiAgICAuaWNvbi0tbm90aWZpY2F0aW9ucyB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTI0cHggMHB4O1xyXG4gICAgICAgIHdpZHRoOiAyNHB4O1xyXG4gICAgICAgIGhlaWdodDogMjRweDtcclxuICAgIH1cclxuICAgIC5pY29uLS1zZWFyY2gge1xyXG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IC00OHB4IC0yM3B4O1xyXG4gICAgICAgIHdpZHRoOiAxNnB4O1xyXG4gICAgICAgIGhlaWdodDogMTZweDtcclxuICAgIH1cclxuICAgIC5pY29uLS1zZXJ2aWNlcyB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTIxcHggLTQ2cHg7XHJcbiAgICAgICAgd2lkdGg6IDE5cHg7XHJcbiAgICAgICAgaGVpZ2h0OiAyNHB4O1xyXG4gICAgfVxyXG4iLCIuaWNvbnMtZ3JvdXAge1xyXG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblxyXG4gIC5pY29uIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRvcDogMnB4O1xyXG5cclxuICAgICYtLW5vdGlmaWNhdGlvbnMge1xyXG4gICAgICBsZWZ0OiAtMnB4O1xyXG4gICAgICB0b3A6IDFweDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5pY29uICsgLmljb24ge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDIzcHg7XHJcbiAgfVxyXG59XHJcbiIsIi51c2VyLWluZm8ge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHJcbiAgJl9fcGljLWhvbGRlciB7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gICAgZmxleC1zaHJpbms6IDA7XHJcbiAgICB3aWR0aDogMzJweDtcclxuICAgIGhlaWdodDogMzJweDtcclxuICB9XHJcblxyXG4gICZfX2ltYWdlIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG5cclxuICAmX19uYW1lIHtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGZvbnQtc2l6ZTogJGZvbnQtc2l6ZS1tZWRpdW07XHJcbiAgICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcbiAgfVxyXG59XHJcbiIsIi5zaWRlYmFyIHtcclxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG5cclxuICAgICZfX2l0ZW0ge1xyXG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkbGlnaHRncmF5O1xyXG4gICAgfVxyXG5cclxuICAgICZfX2xpbmsge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBtaW4taGVpZ2h0OiA1MHB4O1xyXG4gICAgICAgIHBhZGRpbmc6IDEwcHggMDtcclxuICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIC4zcyBlYXNlO1xyXG4gICAgICAgIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcclxuXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICRvZmYtd2hpdGU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2ljb24ge1xyXG4gICAgICAgIHdpZHRoOiAyNXB4O1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAkbS1zaXplO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC5pY29uIHtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX190aXRsZSB7XHJcbiAgICAgICAgY29sb3I6ICR0ZXh0LWdyYXk7XHJcbiAgICB9XHJcbn0iLCIuYWR2ZXJ0aXNlbWVudCB7XHJcbiAgICAmX19zaWduIHtcclxuICAgICAgICBjb2xvcjogI2QzZDNkMztcclxuICAgICAgICBmb250LXNpemU6IDEuMXJlbTtcclxuICAgICAgICBsaW5lLWhlaWdodDogMS4yO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2ltYWdlIHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgICB9XHJcbn1cclxuIiwiLmJsb2NrLXRpdGxlIHtcclxuICBmb250LXNpemU6ICRmb250LXNpemUtc21hbGw7XHJcbiAgY29sb3I6ICRncmF5O1xyXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgbWFyZ2luOiAyMHB4IDAgMThweDtcclxuICBsaW5lLWhlaWdodDogMC45O1xyXG59XHJcbiIsIi5pbmZvLXdyYXBwZXIgPiAqICsgKiB7XHJcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICAkbGlnaHRncmF5O1xyXG59IiwiLmluZm8ge1xyXG4gICZfX2hlYWRlciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICB9XHJcblxyXG4gICZfX21vcmUge1xyXG4gICAgZm9udC1zaXplOiAkZm9udC1zaXplLXNtYWxsO1xyXG4gICAgY29sb3I6ICRkYXJrLWJsdWU7XHJcbiAgICBmbGV4LXNocmluazogMDtcclxuXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmLWl0ZW0ge1xyXG4gICAgJl9faW5uZXIge1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgfVxyXG5cclxuICAgICZfX2NvbnRlbnQtd3JhcHBlciB7XHJcbiAgICAgIHBhZGRpbmc6IDAgMC45cmVtO1xyXG4gICAgICB3aWR0aDogY2FsYygxMDAlIC0gODBweCk7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fY29udGVudCB7XHJcbiAgICAgIG1heC1oZWlnaHQ6IGNhbGMoMTAwJSAtIDEycHgpO1xyXG4gICAgfVxyXG5cclxuICAgICZfX3BpY2hvbGRlciB7XHJcbiAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgd2lkdGg6IDgwcHg7XHJcbiAgICAgIGhlaWdodDogODBweDtcclxuICAgICAgZmxleC1zaHJpbms6IDA7XHJcbiAgICB9XHJcblxyXG4gICAgJl9faW1hZ2Uge1xyXG4gICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgfVxyXG5cclxuICAgICZfX3RpdGxlIHtcclxuICAgICAgY29sb3I6ICRkYXJrLWJsdWU7XHJcbiAgICAgIG1hcmdpbjogLTAuMnJlbSAwIDAuN3JlbSAwO1xyXG4gICAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgICBmb250LXNpemU6ICRmb250LXNpemUtbWVkaXVtO1xyXG4gICAgICBsaW5lLWhlaWdodDogMTtcclxuICAgICAgQGV4dGVuZCAudGV4dC1vbmUtbGluZTtcclxuXHJcbiAgICAgICYtLXNtYWxsLWItbWFyZ2luIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAwLjJyZW07XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX190ZXh0IHtcclxuICAgICAgY29sb3I6ICRncmF5O1xyXG4gICAgICBmb250LXNpemU6ICRmb250LXNpemUtc21hbGw7XHJcbiAgICAgIG1hcmdpbjogMCAwIDAuNXJlbSAwO1xyXG4gICAgICBsaW5lLWhlaWdodDogMS4yO1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgd29yZC1icmVhazogYnJlYWstYWxsO1xyXG5cclxuICAgICAgJjpvbmx5LWNoaWxkIHtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjtcclxuICAgICAgICBtYXgtaGVpZ2h0OiA4MHB4O1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19hY3Rpb24ge1xyXG4gICAgICBjb2xvcjogJGRhcmstYmx1ZTtcclxuICAgICAgZm9udC1zaXplOiAkZm9udC1zaXplLXhzbWFsbDtcclxuICAgICAgbGluZS1oZWlnaHQ6IDE7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICBoZWlnaHQ6ICRmb250LXNpemUteHNtYWxsO1xyXG4gICAgICBsZXR0ZXItc3BhY2luZzogLTAuNHB4O1xyXG5cclxuICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmICsgJiB7XHJcbiAgICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsIi5mb290ZXIge1xyXG4gICZfX2NvcHlyaWdodCB7XHJcbiAgICBtYXJnaW46IDEuNnJlbSAwO1xyXG4gICAgY29sb3I6ICNiN2JmY2Q7XHJcbiAgICBmb250LXNpemU6ICRmb250LXNpemUteHNtYWxsO1xyXG4gICAgbGluZS1oZWlnaHQ6IDE7XHJcbiAgfVxyXG5cclxuICAmX19uYXYge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICB9XHJcblxyXG4gICZfX2xpbmsge1xyXG4gICAgQGV4dGVuZCAuZm9vdGVyX19jb3B5cmlnaHQ7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG1hcmdpbjogMDtcclxuXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmX19saW5rICsgJl9fbGluayB7XHJcbiAgICBtYXJnaW4tbGVmdDogMjBweDtcclxuICB9XHJcbn1cclxuIiwiLnNlY3Rpb24taGVhZGVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxuICBwYWRkaW5nOiAxLjNyZW0gMCAxLjhyZW07XHJcbiAgbWFyZ2luOiAwIDNweCAwIC0zcHg7XHJcblxyXG4gICZfX3RpdGxlIHtcclxuICAgIGNvbG9yOiAkZGFyay1ibHVlO1xyXG4gICAgZm9udC1zaXplOiAkZm9udC1zaXplLXhsYXJnZTtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBsaW5lLWhlaWdodDogMTtcclxuICB9XHJcbn1cclxuIiwiLmJ1dHRvbiB7XHJcbiAgYmFja2dyb3VuZDogJGdyZWVuO1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgZm9udC1zaXplOiAkZm9udC1zaXplLXNtYWxsO1xyXG4gIHBhZGRpbmc6IDAuN3JlbSAxLjlyZW07XHJcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xyXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC4zcyBlYXNlO1xyXG5cclxuICAmOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQ6IGRhcmtlbigkZ3JlZW4sIDEwJSk7XHJcbiAgfVxyXG59XHJcbiIsIi5zZXJ2aWNlcyB7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgbGlzdC1zdHlsZTogbm9uZTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtd3JhcDogd3JhcDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuXHJcbiAgJl9faXRlbSB7XHJcbiAgICB3aWR0aDogMTQwcHg7XHJcbiAgICBmbGV4LXNocmluazogMDtcclxuICAgIG1hcmdpbi1yaWdodDogMS40cmVtO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMS4zcmVtO1xyXG5cclxuICAgICY6bnRoLWNoaWxkKDNuICsgMykge1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICB9XHJcblxyXG4gICAgJjpudGgtY2hpbGQoM24gKyAzKTpudGgtbGFzdC1jaGlsZCgtbiArIDMpIH4gJiB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcblxyXG4gICAgICAmOmxhc3QtY2hpbGQge1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMDtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIEBpbmNsdWRlIGF0V2lkdGgoMTE0NnB4KSB7XHJcbiAgICAgICY6bnRoLWNoaWxkKG4pIHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDEuOHJlbTtcclxuICAgICAgfVxyXG5cclxuICAgICAgJjpudGgtY2hpbGQoNG4gKyA0KSB7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmOm50aC1jaGlsZCg0biArIDQpOm50aC1sYXN0LWNoaWxkKC1uICsgNCkgfiAmIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgQGluY2x1ZGUgYXRXaWR0aCgxMzA0cHgpIHtcclxuICAgICAgJjpudGgtY2hpbGQobikge1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMS44cmVtO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmOm50aC1jaGlsZCg1biArIDUpIHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICY6bnRoLWNoaWxkKDVuICsgNSk6bnRoLWxhc3QtY2hpbGQoLW4gKyA1KSB+ICYge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gICZfX2ljb24td3JhcHBlciB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTQwcHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkbGlnaHRncmF5O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIG1hcmdpbi1ib3R0b206IDEuOHJlbTtcclxuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzIGVhc2U7XHJcbiAgfVxyXG5cclxuICAmX19pdGVtOmhvdmVyICZfX2ljb24td3JhcHBlciB7XHJcbiAgICBiYWNrZ3JvdW5kOiAkb2ZmLXdoaXRlO1xyXG4gIH1cclxuXHJcbiAgJl9faWNvbiB7XHJcbiAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG5cclxuICAmX190aXRsZSB7XHJcbiAgICBsaW5lLWhlaWdodDogMS4yO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1zaXplOiAxLjM2cmVtO1xyXG4gICAgY29sb3I6ICRkYXJrLWJsdWU7XHJcbiAgICBwYWRkaW5nOiAwICRzLXNpemU7XHJcbiAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGVhc2U7XHJcbiAgfVxyXG5cclxuICAmX19pdGVtOmhvdmVyICZfX3RpdGxlIHtcclxuICAgIGNvbG9yOiAkZ3JlZW47XHJcbiAgfVxyXG59XHJcbiIsIi5SZWFjdE1vZGFsUG9ydGFsID4gZGl2IHtcclxuICAgIG9wYWNpdHk6IDA7XHJcbn1cclxuXHJcbi5SZWFjdE1vZGFsUG9ydGFsIC5SZWFjdE1vZGFsX19PdmVybGF5IHtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDIwMG1zIGVhc2UtaW4tb3V0O1xyXG59XHJcblxyXG4uUmVhY3RNb2RhbFBvcnRhbCAuUmVhY3RNb2RhbF9fT3ZlcmxheS0tYWZ0ZXItb3BlbiB7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG59XHJcblxyXG4uUmVhY3RNb2RhbFBvcnRhbCAuUmVhY3RNb2RhbF9fT3ZlcmxheS0tYmVmb3JlLWNsb3NlIHtcclxuICAgIG9wYWNpdHk6IDA7XHJcbn1cclxuXHJcbi5tb2RhbCB7XHJcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICAgIGNvbG9yOiAkZ3JheTtcclxuICAgIG1heC13aWR0aDogMzVyZW07XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgcGFkZGluZzogJG0tc2l6ZTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICRsaWdodGdyYXk7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbn1cclxuXHJcbi5tb2RhbF9fdGl0bGUge1xyXG4gICAgbWFyZ2luOiAwIDAgJG0tc2l6ZSAwO1xyXG59XHJcblxyXG4ubW9kYWxfX2JvZHkge1xyXG4gICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgIG1hcmdpbjogMCAwICRtLXNpemUgMDtcclxuICAgIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcclxufSIsIi5sYXJnZS1oZXJvIHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnL2ltYWdlcy9jb250YWN0LWJnLWhlYWRlci5qcGcnKTtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7IFxyXG4gICAgaGVpZ2h0OiA1MTBweDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgICAmX190ZXh0LWNvbnRlbnQge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgYmFja2dyb3VuZDogcmdiYSgkZGFyay1ibHVlLCAuOSk7XHJcbiAgICB9XHJcbn0iXX0= */
