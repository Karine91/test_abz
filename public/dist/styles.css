/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

@font-face {
  font-family: "ProximaNova-Regular";
  src: url("../fonts/ProximaNova-Regular.eot");
  src: url("../fonts/ProximaNova-Regular.eot?#iefix") format("embedded-opentype"), url("../fonts/ProximaNova-Regular.woff") format("woff"), url("../fonts/ProximaNova-Regular.ttf") format("truetype"), url("../fonts/ProximaNova-Regular.svg#ProximaNova-Regular") format("svg");
  font-style: normal;
  font-weight: normal; }

html {
  font-size: 62.5%; }

* {
  box-sizing: border-box; }

body {
  font-family: 'ProximaNova-Regular', sans-serif;
  font-size: 1.6rem;
  color: #7c8695;
  line-height: 1.6; }

button {
  cursor: pointer; }

button:disabled {
  cursor: default; }

.is-active {
  font-weight: bold; }

a {
  text-decoration: none; }

.text-one-line, .info-item__title {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis; }

.container {
  min-width: 970px;
  max-width: 1440px;
  padding: 0 1.5rem;
  margin: 0 auto; }
  .container--fluid {
    width: 100%;
    min-width: auto;
    max-width: none;
    padding: 1.5rem 1.3rem 1.5rem 1.4rem; }
  .container--tb-padding {
    padding-top: 1.5rem;
    padding-bottom: 1.5rem; }
  .container--bordered {
    border: 1px solid #e0e2e6;
    border-radius: 4px; }
  .container--no-margin {
    margin: 0; }

.row {
  display: flex;
  flex-wrap: wrap;
  margin-left: -1.5rem;
  margin-right: -1.5rem; }
  .row--centered {
    align-items: center; }
  .row--column {
    flex-direction: column; }
  .row__col {
    padding: 0 1.5rem; }
  .row__col--2 {
    width: 16.666%; }
  .row__col--3 {
    width: 25%; }
  .row__col--6 {
    width: 50%; }
  .row__col--7 {
    width: 58.333%; }
  .row__col--width-fixed {
    max-width: 243px; }
  .row__col--width-fluid {
    flex-grow: 1; }
  .row__col--no-padding {
    padding: 0; }

.header {
  background: #87b448;
  padding: 1.5rem 0;
  border-bottom: 2px solid #71973c; }
  .header__middle-block {
    display: flex;
    align-items: center; }
    .header__middle-block > div + div {
      margin-left: 30px; }

.logo {
  width: 130px;
  display: inline-block; }
  .logo__image {
    width: 100%; }

.search {
  position: relative;
  flex-grow: 1;
  display: inline-flex; }
  .search .icon {
    display: inline-block;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 10px;
    margin: auto; }
  .search__input {
    border-radius: 2px;
    border: none;
    width: 100%;
    background-color: rgba(0, 0, 0, 0.15);
    padding: 10px 10px 10px 40px;
    font-size: 1.5rem;
    color: white; }
    .search__input::-webkit-input-placeholder {
      color: rgba(255, 255, 255, 0.5); }
    .search__input:-moz-placeholder {
      color: rgba(255, 255, 255, 0.5); }
    .search__input::-moz-placeholder {
      color: rgba(255, 255, 255, 0.5); }
    .search__input:-ms-input-placeholder {
      color: rgba(255, 255, 255, 0.5); }

.icon {
  background-image: url("/images/sprites/sprite.png"); }

.icon--ask {
  background-position: 0px 0px;
  width: 24px;
  height: 24px; }

.icon--chat {
  background-position: 0px -24px;
  width: 26px;
  height: 22px; }

.icon--companies {
  background-position: 0px -46px;
  width: 21px;
  height: 24px; }

.icon--feed {
  background-position: -48px 0px;
  width: 24px;
  height: 23px; }

.icon--notifications {
  background-position: -24px 0px;
  width: 24px;
  height: 24px; }

.icon--search {
  background-position: -48px -23px;
  width: 16px;
  height: 16px; }

.icon--services {
  background-position: -21px -46px;
  width: 19px;
  height: 24px; }

.icons-group {
  display: inline-flex;
  align-items: center; }
  .icons-group .icon + .icon {
    margin-left: 20px; }

.user-info {
  display: flex;
  align-items: center; }
  .user-info__pic-holder {
    border-radius: 4px;
    overflow: hidden;
    margin-right: 10px;
    flex-shrink: 0; }
  .user-info__image {
    display: block;
    width: 100%; }
  .user-info__name {
    color: white;
    font-size: 1.6rem;
    word-break: break-all; }

.sidebar {
  list-style: none;
  margin: 0;
  padding: 0; }
  .sidebar__item {
    border-bottom: 1px solid #e0e2e6; }
  .sidebar__link {
    display: flex;
    align-items: center;
    min-height: 50px;
    padding: 10px 0;
    transition: background .3s ease;
    word-break: break-all; }
    .sidebar__link:hover {
      background: #f4f7fb; }
  .sidebar__icon {
    width: 25px;
    display: flex;
    justify-content: center;
    margin-right: 2.5rem; }
    .sidebar__icon .icon {
      display: block; }
  .sidebar__title {
    color: #59606b; }

.advertisement__sign {
  color: #d3d3d3;
  font-size: 1.1rem;
  line-height: 1.2; }

.advertisement__image {
  display: block;
  margin-bottom: 5px; }

.block-title {
  font-size: 1.4rem;
  color: #7c8695;
  font-weight: 400;
  margin: 20px 0;
  line-height: 1; }

.info-wrapper > * + * {
  margin-top: 20px;
  border-top: 1px solid #e0e2e6; }

.info__header {
  display: flex;
  justify-content: space-between;
  align-items: center; }

.info__more {
  font-size: 1.4rem;
  color: #1c2534;
  flex-shrink: 0; }
  .info__more:hover {
    text-decoration: underline; }

.info-item__inner {
  display: flex; }

.info-item__content-wrapper {
  padding: 0 .9rem;
  width: calc(100% - 80px); }

.info-item__content {
  max-height: calc(100% - 12px); }

.info-item__picholder {
  border-radius: 4px;
  overflow: hidden;
  width: 80px;
  height: 80px;
  flex-shrink: 0; }

.info-item__image {
  height: 100%;
  display: block; }

.info-item__title {
  color: #1c2534;
  margin: 0 0 .7rem 0;
  font-weight: 400;
  font-size: 1.6rem;
  line-height: 1; }

.info-item__text {
  color: #7c8695;
  font-size: 1.4rem;
  margin: 0 0 .7rem 0;
  line-height: 1;
  width: 100%;
  word-break: break-all; }
  .info-item__text:only-child {
    margin: 0;
    line-height: 1.2;
    max-height: 80px;
    overflow: hidden; }

.info-item__action {
  color: #1c2534;
  font-size: 1.2rem;
  line-height: 1;
  display: block;
  height: 1.2rem; }
  .info-item__action:hover {
    text-decoration: underline; }

.info-item + .info-item {
  margin-top: 20px; }

.footer__copyright, .footer__link {
  margin: 20px 0;
  color: #b7bfcd;
  font-size: 1.2rem;
  line-height: 1; }

.footer__nav {
  display: flex; }

.footer__link {
  display: block;
  margin: 0; }
  .footer__link:hover {
    text-decoration: underline; }

.footer__link + .footer__link {
  margin-left: 20px; }

.section-header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start; }
  .section-header__title {
    color: #1c2534;
    font-size: 3rem;
    font-weight: 400;
    margin: 0 0 2rem;
    line-height: 1.2; }

.button {
  background: #87b448;
  border: none;
  color: white;
  font-size: 1.4rem;
  padding: 1rem 2rem;
  border-radius: 6px;
  transition: background .3s ease; }
  .button:hover {
    background: #6c9039; }

.services {
  margin: 0;
  padding: 0;
  list-style: none;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around; }
  .services__item {
    width: 140px;
    flex-shrink: 0;
    margin-right: 1.8rem;
    margin-bottom: 1.6rem; }
    .services__item:nth-child(3n + 3) {
      margin-right: 0; }
    .services__item:nth-child(3n + 3):nth-last-child(-n + 3) ~ .services__item {
      margin-bottom: 0; }
      .services__item:nth-child(3n + 3):nth-last-child(-n + 3) ~ .services__item:last-child {
        margin-right: 0; }
    @media (min-width: 1146px) {
      .services__item:nth-child(n) {
        margin-right: 1.8rem; }
      .services__item:nth-child(4n + 4) {
        margin-right: 0; }
      .services__item:nth-child(4n + 4):nth-last-child(-n + 4) ~ .services__item {
        margin-bottom: 0; } }
    @media (min-width: 1304px) {
      .services__item:nth-child(n) {
        margin-right: 1.8rem; }
      .services__item:nth-child(5n + 5) {
        margin-right: 0; }
      .services__item:nth-child(5n + 5):nth-last-child(-n + 5) ~ .services__item {
        margin-bottom: 0; } }
  .services__icon-wrapper {
    width: 100%;
    height: 140px;
    border: 1px solid #e0e2e6;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 1.5rem;
    background: white;
    transition: background .3s ease; }
  .services__item:hover .services__icon-wrapper {
    background: #f4f7fb; }
  .services__icon {
    max-width: 100%; }
  .services__title {
    line-height: 1.2;
    text-align: center;
    font-size: 1.36rem;
    color: #1c2534;
    padding: 0 1.5rem;
    transition: color .3s ease; }
  .services__item:hover .services__title {
    color: #87b448; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
